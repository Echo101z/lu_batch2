
DAY - 1 - Lab -1


windows task bar type env

Select Environment variable 

Add JAVA_HOME => specify java home location

Edit Path variable =>by added %java_home%\bin

Test by  invoking echo %java_home% from command prompt

======================================

Create a Java Class Student with any three attributes and Constructors 

Create a directory with the name  => bin

The compiled classes should be placed into the bin folder 

Create a Class Application and Invoke the Constructor and call the methods

=================================================================
Setting the Class Path - Lab
===================================================


==========================================
DAY - 2 - Lab -1

 => DONE  1. Constructor -> 
 => DONE  2. Constructor overloading
 => DONE  3. Variables / casting
 => DONE  4. Wrapper Class
 => DONE  5. Auto Boxing
 => DONE 6. Eclipse Features  / console /perspective/ problems / show and hide tabs

===================================================

DAY 2 - Assignment -1 

Create a Java Class to represent  mobileBill -> should have details of customer 
like his name, mobile number etc., and the plan name , and also amount he has to pay

-Create overloaded constructor and test them

- Use instance and atleast one static variable in the class

- Class Name should be noun first character upper case / method names verb
- method names camel case , variable name should be meaningful not one or two - character, class should be in a package and add required comments

==========================================================================
DAY -2   LAB -2

 => DONE    1. Method Overloading
 => DONE    2. Static / variable/method/import
 =>  DONE   3. Scanner class
 => DONE    4. Flow Control
============================================================================
  DAY 2 - Assignment -2

Create Java Class Book with details like id,bookName,author,price.

Create a Java Class BookService Which will have overloaded methods
to calculate the price discount .

=> One Method will take book as argument and calculate the discount on the 
    basis of price - use a simple if else ladder 

=> Another Method will take book and customer type -> Corporate or Retail 
   and the discount will be calculated using if else-if ladder 

 => Take the input for the application using scanner class 

 =>  Test Both the Methods
======================================================================== 
DAY -3 - LAB-1

 =>DONE   1. Arrays 
 => DONE  2. Inheritance -extends- super-(3)  

 DAY 3 - Assignment -1

Create a Java Class Loan and a sub class Housing Loan , the Loan class
should have a method called findRateOfInterest ,rate of Interest is calculated
on the basis of cibilScore  if score >500 rateOfInterest is 7.5 else 8.2

The Housing Loan class overrides the Loan class findRateOfIntest method and returns the interstamount based on simple Interest - It has attributes like loanAmount 
details of property etc.,

Test the logic using Application class with psvm


DAY -3 - LAB-2

 => DONE   1. Abstract Class
 => DONE   2. Interfaces
 => DONE  3. Polymorphism

DAY 3 - Assignment -2

 1. In the SavingsAccount and Business Account class override withdraw methods
    SavingsAccount requires to maintain a minimum balance of 5000
    Business Account requires to maintain a minimum balance of 25000

   Saving Account holder can deposit upto 100000 
   Business Account Holder can deposit upto 1000000 

  Show a error message if the above condition is not met

Test both deposit and withdraw methods from the Main application

Day 3 - Assignment -3

  Create an Interface Billable - with a method public double calculate(Object ... objs).
  Calculate method will calculate the salary based on some condition which 
  will differ for different classes
  Create classes like SoftwareEnginner , CivilEnginner, Plumber ,Advocate etc.,
  Implement the Billable interface in all these classes and override the calculate method
  Create a Service with One Method which take Billable as argument and print the calculated amount
   

  =================================================================
Day -4   Lab -1

==> DONE  1. Exception Handling -with try-catch
==> DONE  2. Eception Handling - try-catch-finally

DAY 4 - Assignment -1

  1. Copy the Student Class from any exisiting  Project else create a Student class
     with attributes like rollNumber,studentName,markScored;
  2. Create a Exception class RangeCheckException Extending java.lang.Exception and      override the getMessage method
  3. Check the markscored is within the range 0 to 100 else throw the      rangecheckException
   4. Do Exception Handling in both setMarkScored and constructor
   5. In setter Method use try catch block
    6. In Constructor use throws clause


Day 4 - Lab 2

    1. Copy the Student Class from any exisiting  Project else create a Student class     with attributes like rollNumber,studentName,markScored;
    2. Add the Serializable Interface to the Student class
    3. Create a StudentService class and Serialize the Student Object 

DAY 4 - Assignment -2

=>DONE   1. Add transient to the attribute qualification
=>DONE  2. Create a overloaded writeObjectToFile which takes a array of Professor as 
          argument  , serialize to the file 
=>DONE   3. Deserialize the file and print the records

DAY 4 - Assignment -3

    1. Change the size of arry in readFrom file to  4
    2. Add 3 More professors to the File using writeToTextFile 
    3. The Application Should be read all the professors from the file 
    4. Manage the Array Size programatically.
    
Day 4 - Lab 3

=> DONE     1.Eqauls and Hash Code Method
=> DONE     2.Final class/method/variable
=> DONE    3.Java Docs
=> DONE     4. Packaging Jar
Day -4  Assignment -4

   1. Explain Equals and HashCode methods
   2. Immutable in java => java.lang.String
   
=======================================================================

Day 5 - Lab 1

=> DONE 1. Threads -Runnable
=> DONE 2. Threads - Thread Class

Day 5 - Assignment-1

Create a Java Class FileService with methods void writeToFile(String[] array) and 
 void  readFromFile() the methods should read and write data to a text file .

Create two java classes FileReaderThread and FileWriterThread both of them 
should implement Runnable Interface and they should invoke the appropriate 
methods of FileService Class .

The Threads should communitcate with each other by using wait and notifyall

Day 5 - Lab 2

DONE => Generics 

DONE => Collection List -Comparable , Comparator


Day 5 - Assignment-2

1. Add a Method in the DataAccess interface to add more than one CreditCard

2. Implement the method in the Service and test it

3. Print The Names of the Top 3 CreditLimit Holders

4. Print The Names of the Least 3 CreditLimit Holders

5. Create a Class Called Transaction with id,description and amount

6. Store this Transaction as a Set<Transaction> in CreditCard 

7  Try to add and retirve those details.

===================================

Day 6 - Lab -1

=>DONE    1) HashSet
=>DONE    2) HashMap / entryset
=> DONE   3) Arrays 


Day 6 - Assignment-1

 1. Create a Java Class - BloodDonor with properties like Id,name,age and bloodGroup
 2. Store the details of the donors in a Map Based Collection 
 3. The Key will be bloodgroup like 'apos','bpos','oneg' and the values will be 
    all the donors in that group.

 4. Test the applicatin with a main method

Day 6 - Lab 2

=> DONE  1. Annotations 
=> DONE  2. Annonymous Class , Inner Classes

Day 6 - Assingmnet 2

Refer the document in github.com/vatsanTraining/corejava  ->day7-Exercise.txt


========================================================================= 
Day - 7 -Lab 1

 =>Done  1. Java Annonymous Class
 =>DONE  2. Built in Legacy Functional Interfaces and Lambdas
 =>DONE  3. Create a Custom Functional Interfaces
 =>DONE  4. Implemnt interface with Lambdas
Day -7 Assignment 1

        1. Use the credit card Class created in the Previous exercise 
        2. Create Lambda expression using BIFunction to test the name and 
           credit limit is matching with a given value
        3. Create a Lambda Expression using Supplier , Create a method which 	   takes a int argument if the value of integer is 0 the supplier will 
           return zero argument Credit Card constructor else it will return            constructor with argument.
       
Day - 7 -Lab 2

      =>DONE    1. Method Reference
      =>DONE    2. default Method and static method in interface
          3. Optional

Day - 7 -Assignment -2 

          1. Add Data Using Service and Test the Stream Methods
=======================================================================



Day -8 - Lab 1

   => DONE 1. Streams - Sort 
   => DONE 2. Streams -MAX,Count

Day -8  Lab -2

   =>DONE  1. Creating a JDBC Connection
   =>DONE  2. CRUD Example 


DAY-8 Assignment -1 

    1. Implement the findById, update and remove Methods 
    2. Optimize the code where ever its possible DRY
    3. The Same code should not be repeated in diffrent methods of the same class
    4. If it is so abstract it into a private method and complete
    5. Test the 3 methods from application

Day -8  Lab -3

=>DONE    1. BatchUpdate
=>DONE    2. Transaction
=>DONE    3. MetaData
=>DONE    4. RowSet - Pagination
===========================================


Java -cp first-example.jar com.poortoys.examples.AppMain

Day - 9  Lab -1

=>DONE      1. Maven
=>DONE       2. log4j 
=>DONE       3. json, 

Day -9  Lab - 2
            
=>DONE 1.   Connection Pooling 

Day -9  Lab - 3

=>DONE1. unit Testing

===============================================================================

Day -10  Lab -1

=> Creating Servlets
=> Request Dispatcher
=> Request Parameters

Day -10 Assignment -1

  1. Copy the Doctor Class From an exisiting Project
  2. Update the addDoctor.html  and addtional input fields with HTML 5 validation for remaining 
     properties in Doctor.java
  3. In the doPost method of the servlet capture all the values and convert to Doctor Object
  4. Display the Doctor Object in success.jsp

Day -10 Assignment -2

   1. Create a New Dyanmic Web Project login-service.
   2. Create a Model Class User with properties like userName,passWord and role 
   3. Create a Service called Validator with a Method validate(User user) that takes user as argument
   4. In the Method check If the UserName and password is equal to india and india return true or else false
   5. Create a Servler ValidationServlet , in the post method of the servlet read the userName and Password
   6. Pass that to the validate(User user) method and capture the return value
   7. If its true forward to success.jsp else failure.jsp


=================================================================================

Day -11 Lab -1

Done => 1. Servlet Life Cycle
Done => 2. Jsp transalated into Java
DONE => 3. Expression/Declaration and Scriptlet in JSP
DONE => 4. Adding JSTL Jars
DONE => 5. Using JSTL Core Tags


Day-11 Assignment 1
     1. Complete StudentServlet 
     2. Complete the HTML Form for Input



Day -11 Lab -2

=>Done   1.JSTL Implicit Object
=>Done   2. include /jsp include
=>Done   3. jsp:forward


Day-11 Assignment 2

  1. Create a Java Class Which maintain the list of users and their credit limit
  2. The Web Application has a HTML Form thorugh which the user can Select an Plan
  3. Once the user selects the Plan It goes to a Servlet where the cost of the item is calculated and the amount 
     is debit from the users credit Limit 
  4. If there is suffient credit Limit the transaction is completed and shows the balance 
  5 If there are no sufficent balance without detecting the balance it just shows exisiting balance 
  


                UserName ----------------
                 Plan --ab175---ab400----ab2000---Make it as a radio Button
                         Submit 

                              Successfully Debit you new credit is ---99999---------


                              Insufficent Balance -your limit is 9999 Try Adding amount 

credit Limit 2000 =>  1600 


Insufficent Balance your credit Limit 1600